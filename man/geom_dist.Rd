% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_dist.R
\name{geom_dist}
\alias{geom_dist}
\title{Geometry for plotting distributions with ggplot2.}
\usage{
geom_dist(
  x,
  quantile = 0.95,
  cv,
  color,
  alpha = 0.2,
  point_size = 0,
  center_fun = mean,
  legend_title = "Distribution",
  ...
)
}
\arguments{
\item{x}{either a numeric vector, list of numeric vectors, or a data frame.
For lists and data frames multiple density plots will be plotted.}

\item{quantile}{the proportion to shade around the mean. Set to 0 to not
shade any of the distribution.}

\item{cv}{critical values which define the bounds of the shaded area. If specified the \code{quantile}
parameter is ignored.}

\item{color}{the color of the distribution. If plotting more than one
distribution (i.e. \code{x} is a list or data.frame) then the length of
color should be equal to the length or number of columns in x.}

\item{alpha}{the transparency level used for shading the quantiles.}

\item{point_size}{the size of the point at the center. The default is 0
which will exclude the point.}

\item{center_fun}{the function used to determine the center of the
distribution, typically \code{mean} or \code{median.}}

\item{legend_title}{if \code{x} is a list of vectors a legend will be added. This
is the title of the legend or set to NULL to exclude the legend.}

\item{...}{other parameters passed to \code{density()}.}
}
\value{
a list of ggplot2 geometries.
}
\description{
This function works like any other \code{geom_} type ggplot2 function. However,
this technically is not a custom geometry but instead returns a list of
geometries to plot the various components of the distribution(s). In most
instances this can be used within any ggplot2 expression. The primary
difference is this function does not use any of the ggplot2 data or aes
components.
}
\examples{
# Plot a single distribution
x <- rnorm(n = 1000)
ggplot2::ggplot() +
    geom_dist(x) +
    ggplot2::geom_point(data = data.frame(x = mean(x), y = 0),
                        ggplot2::aes(x = x, y = y), pch = 22)

# Plot two distributions
x1 <- rnorm(1000, mean = 0, sd = 4)
x2 <- rnbinom(1000, 10, .4)
ggplot2::ggplot() + geom_dist(list(normal = x1, binomial = x2), adjust = 2)

# Plot more than one distribution using a data frame
data(mtcars)
ggplot2::ggplot() + geom_dist(mtcars[,c('mpg', 'wt')], quantile = 0.5)
}
