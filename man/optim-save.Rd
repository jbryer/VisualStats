% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optim_save.R
\name{optim_save}
\alias{optim_save}
\alias{print.optim}
\alias{summary.optim}
\alias{plot.optim}
\title{Warpper to optim to save iterations.}
\usage{
optim_save(par, fn, ...)

\method{print}{optim}(x, ...)

\method{summary}{optim}(object, digits = 3, ...)

\method{plot}{optim}(x, param_labels, result_label, ...)
}
\arguments{
\item{par}{initial parameters to to be optimized over.}

\item{fn}{the function to minimized (or maximized).}

\item{...}{currently unused.}

\item{x}{result from \code{\link[=option_save]{option_save()}}.}

\item{object}{result from \code{\link[=optim_save]{optim_save()}}.}

\item{digits}{number of digits to round the parmaeters to.}

\item{param_labels}{character vector to label the parameters (e.g. variable names).}

\item{result_label}{character to label the result (i.e. the resutl of function optimized).}
}
\value{
the results of optim with two additional elements, iterations with a
a list of the values at each iteration of the algorithm and
iterations_df which is a data.frame version of the list.

the final parameters.

\code{object} invisibly.

a ggplot2 expression.
}
\description{
This function wraps the \code{\link[stats:optim]{stats::optim()}} function and saves the parameters
and likelihood estimation at each step of the algorithm.
}
\examples{
data("mtcars")
residual_sum_squares <- function(parameters, predictors, outcome) {
    if(length(parameters) - 1 != ncol(predictors)) {
  	   stop('Number of parameters does not match the number of predictors.')
    }
    predicted <- 0
    for(i in 1:ncol(predictors)) {
  	   predicted <- predicted + parameters[i] * predictors[i]
    }
    predicted <- predicted + parameters[length(parameters)]
    residuals <- outcome - predicted
    ss <- sum(residuals^2)
    return(ss)
}
optim.rss <- optim_save(
    par = runif(3),
    fn = residual_sum_squares,
    predictors = mtcars[,c('wt', 'vs')],
    outcome = mtcars$mpg
)
optim.rss
plot(optim.rss)
}
